buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.


version = modVersion
group = "ladysnake.gens" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "gens"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

repositories {
    maven { url 'https://jitpack.io' }
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "modmaven.k-4u.nl"
    }
}

minecraft {
    version = "${project.forgeVersion}"
    runDir = "run"

    mappings = "snapshot_20180329"
    makeObfSourceJar = false
    replace '@VERSION@', modVersion

    if (project.hasProperty('mc_username')) {
        clientRunArgs += ['--username', "${project.mc_username}"]
        if (project.hasProperty('mc_password')) {
            clientRunArgs += ['--password=', "${project.mc_password}"]
        }
    }
    if (project.hasProperty('mc_uuid')) {
        clientRunArgs += ['--uuid', "${project.mc_uuid}"]
    }
    serverRunArgs += "nogui"

    if (project.hasProperty('client_args')) {
        clientJvmArgs += "${project.client_args}"
    }
    if (project.hasProperty('server_args')) {
        serverJvmArgs += "${project.server_args}"
    }

    clientJvmArgs += "-Dlog4j.skipJansi=true"
    serverJvmArgs += "-Dlog4j.skipJansi=true"
}

dependencies {
    deobfCompile 'com.github.Pyrofab:Ladylib:dcd77dcf23'
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    archiveName = "${archivesBaseName}-${mcVersion}-${modVersion}.jar"
    manifest {
        attributes 'FMLAT': 'gens_at.cfg'
    }
}